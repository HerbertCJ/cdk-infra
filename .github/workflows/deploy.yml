name: Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    types: [labeled]
    branches:
      - main

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.label.name == 'deploy-test')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Create ECR repository
        id: create-ecr-repo
        run: |
          aws ecr describe-repositories --repository-names backend-lambda-repo || \
          aws ecr create-repository --repository-name backend-lambda-repo

      - name: Build, tag, and push Docker image to ECR
        run: |
          docker build -t backend-lambda-repo:latest ./lib/backend-docker
          docker tag backend-lambda-repo:latest ${{ steps.login-ecr.outputs.registry }}/backend-lambda-repo:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/backend-lambda-repo:latest

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Deploy CDK stack
        run: npx cdk deploy --all --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
